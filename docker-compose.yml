version: "3"

name: 'home-server'

# create a new bridge network for the containers to use
networks:
  synobridge:
    name: synobridge
    driver: bridge
    driver_opts:
      subnet: 172.20.0.0/16
      gateway: 172.20.0.1

services:

  # VPN client in a thin Docker container for multiple VPN providers,
  # written in Go, and using OpenVPN or Wireguard, DNS over TLS, with a few proxy servers built-in.
  gluetun:
    image: qmcgaw/gluetun
    container_name: gluetun
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun
    ports:
      - 8888:8888/tcp # HTTP proxy
      - 8388:8388/tcp # Shadowsocks
      - 8388:8388/udp # Shadowsocks
      - 9696:9696/tcp # prowlarr
      - 7878:7878/tcp # radarr
      - 8989:8989/tcp # sonarr
      - 5055:5055/tcp # overseerr
      - 8191:8191/tcp # flaresolverr
      - 8090:8090 # qbittorrent
    volumes:
      - ${CONFIG_DIR}/gluetun:/gluetun
    environment:
      - PUID
      - PGID
      - TZ
      - VPN_SERVICE_PROVIDER=${VPN_PROVIDER}
      - VPN_TYPE
      - FREE_ONLY
      - SERVER_COUNTRIES=${VPN_COUNTRIES}
      - SERVER_REGIONS=${VPN_REGIONS}

      # auth env vars
      - WIREGUARD_PRIVATE_KEY
      - OPENVPN_USER
      - OPENVPN_PASSWORD

      - WIREGUARD_MTU=1320
      - HTTPPROXY=off #change to on if you wish to enable
      - SHADOWSOCKS=off #change to on if you wish to enable
      - FIREWALL_OUTBOUND_SUBNETS=172.20.0.0/16,192.168.1.0/24 #change this in line with your subnet see note on guide.
      - FIREWALL_VPN_INPUT_PORTS=62659 #uncomment this line and change the port as per the note on the guide
    networks:
      - synobridge
    restart: unless-stopped

  # Proxy server to bypass Cloudflare protection
  flaresolverr:
    image: flaresolverr/flaresolverr
    container_name: flaresolverr
    environment:
      - PUID
      - PGID
      - TZ
    volumes:
      - ${CONFIG_DIR}/flaresolverr:/config
    network_mode: service:gluetun # run on the vpn network
    depends_on:
      - gluetun
    restart: unless-stopped

  # Plex organizes all of your personal media so you can enjoy it no matter where you are.
  plex:
    image: linuxserver/plex
    container_name: plex
    environment:
      - PUID
      - PGID
      - PLEX_CLAIM
      - VERSION=latest
      - DOCKER_MODS=linuxserver/mods:plex-absolute-hama
    volumes:
      - ${CONFIG_DIR}/plex:/config
      - ${MEDIA_DIR}:/media
    network_mode: host
    restart: unless-stopped

  # qBittorrent is a bittorrent client programmed in C++ / Qt that uses
  # libtorrent (sometimes called libtorrent-rasterbar) by Arvid Norberg.
  qbittorrent:
    image: linuxserver/qbittorrent
    container_name: qbittorrent
    environment:
      - PUID
      - PGID
      - TZ
      - WEBUI_PORT=8090
    volumes:
      - ${CONFIG_DIR}/qbittorrent:/config
      - ${MEDIA_DIR}/downloads:/data/torrents
    network_mode: service:gluetun # run on the vpn network
    depends_on:
      - gluetun
    restart: unless-stopped

  # üè° Open source home automation that puts local control and privacy first.
  homeassistant:
    image: linuxserver/homeassistant
    container_name: homeassistant
    environment:
      - PUID
      - PGID
      - TZ
      - DOCKER_MODS=linuxserver/mods:homeassistant-hacs
    volumes:
      - ${CONFIG_DIR}/homeassistant:/config
      - /var/run/docker.sock:/var/run/docker.sock # allows homeassistant to see other containers
    # devices:
      # - /dev/ttyACM0:/dev/ttyACM0 # Z-Wave USB stick, disable if not using
    network_mode: host
    restart: unless-stopped

  # Prowlarr is an indexer manager/proxy built on the popular *arr
  # .net/reactjs base stack to integrate with your various PVR apps.
  prowlarr:
    image: linuxserver/prowlarr:latest
    container_name: prowlarr
    environment:
      - PUID
      - PGID
      - TZ
    volumes:
      - ${CONFIG_DIR}/prowlarr:/config
    network_mode: service:gluetun # run on the vpn network
    depends_on:
      - gluetun
    restart: unless-stopped

  # A fork of Sonarr to work with movies √† la Couchpotato.
  radarr:
      image: linuxserver/radarr:latest
      container_name: radarr
      environment:
        - PUID
        - PGID
        - TZ
      volumes:
        - ${CONFIG_DIR}/radarr:/config
        - ${MEDIA_DIR}/downloads:/data/torrents
        - ${MEDIA_DIR}/movies:/data/movies
      network_mode: service:gluetun # run on the vpn network
      depends_on:
        - gluetun
      restart: unless-stopped

  # Smart PVR for newsgroup and bittorrent users.
  sonarr:
      image: linuxserver/sonarr:latest
      container_name: sonarr
      environment:
        - PUID
        - PGID
        - TZ
      volumes:
        - ${CONFIG_DIR}/sonarr:/config
        - ${MEDIA_DIR}/downloads:/data/torrents
        - ${MEDIA_DIR}/tv:/data/tv
      network_mode: service:gluetun # run on the vpn network
      depends_on:
        - gluetun
      restart: unless-stopped

  # Overseerr is a request management and media discovery tool
  # built to work with your existing Plex ecosystem.
  overseerr:
    image: linuxserver/overseerr:latest
    container_name: overseerr
    environment:
      - PUID
      - PGID
      - TZ
    volumes:
      - ${CONFIG_DIR}/overseerr:/config
    network_mode: service:gluetun # run on the vpn network
    depends_on:
      - gluetun
    restart: unless-stopped